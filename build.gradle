buildscript {
	ext { springBootVersion = '1.3.1.RELEASE' }
	repositories { jcenter() }
	dependencies { classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}" }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 

sourceCompatibility = 1.8
targetCompatibility = sourceCompatibility

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	compile 'org.slf4j:slf4j-api:1.7.18'
	compile 'org.apache.poi:poi:3.14'
	compile 'org.apache.commons:commons-lang3:3.4'
	compile 'org.apache.httpcomponents:httpclient:4.2'
	compile 'org.apache.httpcomponents:httpmime:4.2'
	compile 'commons-io:commons-io:2.4'
	compile 'com.julienvey.trello:trello-java-wrapper:0.3.3-SNAPSHOT'
	compile 'org.springframework.cloud:spring-cloud-config-server'

	// Declare the dependency for your favourite test framework you want to use in your tests.
	// TestNG is also supported by the Gradle Test task. Just change the
	// testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	// 'test.useTestNG()' to your build script.
	testCompile 'junit:junit:4.12'
	testCompile 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {imports { mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.M4" } }

task wrapper(type: Wrapper) {
	gradleVersion = '2.12'
}

task stage {
	dependsOn build
}

jar {
	baseName = project.name
}

